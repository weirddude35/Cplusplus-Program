#include <iostream>
#include <fstream>
#include <map>

class GroceryAnalyzer {
private:
    std::map<std::string, int> itemFrequencyMap;

public:
    void readInputFile(const std::string& filename) {
        std::ifstream inputFile(filename);
        if (!inputFile.is_open()) {
            std::cerr << "Error opening file: " << filename << std::endl;
            return;
        }

        std::string itemName;
        int itemCount;

        while (inputFile >> itemName >> itemCount) {
            itemFrequencyMap[itemName] = itemCount;
        }

        inputFile.close();
    }

    int getItemFrequency(const std::string& itemName) const {
        auto it = itemFrequencyMap.find(itemName);
        return (it != itemFrequencyMap.end()) ? it->second : 0;
    }

    void displayAllItemsWithFrequency() const {
        for (const auto& pair : itemFrequencyMap) {
            std::cout << pair.first << " " << pair.second << std::endl;
        }
    }

    void displayHistogram() const {
        for (const auto& pair : itemFrequencyMap) {
            std::cout << pair.first << " ";
            for (int i = 0; i < pair.second; ++i) {
                std::cout << "*";
            }
            std::cout << std::endl;
        }
    }

    void saveDataToFile(const std::string& filename) const {
        std::ofstream outputFile(filename);
        if (!outputFile.is_open()) {
            std::cerr << "Error creating file: " << filename << std::endl;
            return;
        }

        for (const auto& pair : itemFrequencyMap) {
            outputFile << pair.first << " " << pair.second << std::endl;
        }

        outputFile.close();
    }
};

int main() {
    GroceryAnalyzer groceryAnalyzer;

    groceryAnalyzer.readInputFile("CS210_Project_Three_Input_File.txt");

    int userChoice;

    do {
        std::cout << "Menu:\n";
        std::cout << "1. Look for an item\n";
        std::cout << "2. Print all items with frequency\n";
        std::cout << "3. Print histogram\n";
        std::cout << "4. Save data to file\n";
        std::cout << "5. Exit\n";
        std::cout << "Enter your choice: ";

        std::cin >> userChoice;

        switch (userChoice) {
            case 1: {
                std::string itemName;
                std::cout << "Enter the item to look for: ";
                std::cin >> itemName;
                int frequency = groceryAnalyzer.getItemFrequency(itemName);
                std::cout << "Frequency of " << itemName << ": " << frequency << std::endl;
                break;
            }
            case 2:
                groceryAnalyzer.displayAllItemsWithFrequency();
                break;
            case 3:
                groceryAnalyzer.displayHistogram();
                break;
            case 4:
                groceryAnalyzer.saveDataToFile("frequency.dat");
                std::cout << "Data saved to frequency.dat\n";
                break;
            case 5:
                std::cout << "Exiting program\n";
                break;
            default:
                std::cout << "Invalid choice. Please try again.\n";
        }

    } while (userChoice != 5);

    return 0;
}
